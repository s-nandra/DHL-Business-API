<?xml version="1.0" encoding="utf-8"?>
<xs:schema xmlns:gv="http://dhl.de/webservices/businesscustomershipping" xmlns:cis="http://dhl.de/webservice/cisbase" xmlns="http://www.w3.org/2001/XMLSchema" targetNamespace="http://dhl.de/webservices/businesscustomershipping" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:import schemaLocation="geschaeftskundenversand-api-2.0-schema-cis_base.xsd" namespace="http://dhl.de/webservice/cisbase" />
  <xs:annotation>
    <xs:documentation><![CDATA[

<extension id="shipmentNumber">
  
     <context id="CreateShipmentResponse">
        
        <context id="PieceNumber">
          Obsolete in PieceNumber where only LicensePlate is used.
        </context>
     </context>
 
		 <context id="DeleteShipmentResponse">
				<context id="ShipmentNumber">
						(obsolete for DeleteShipmentTDRequest).
				</context>
		 </context>
	
     <context id="DeleteShipmentRequest">
				<context id="ShipmentNumber">
					(obsolete for DeleteShipmentRequest).
					</context>
		 </context>   
  
     <context id="GetLabelTDRequest">
				<context id="ShipmentNumber">
					(obsolete for GetLabelRequest).
					</context>
		 </context>
			
		 <context id="GetLabelResponse">
				<context id="ShipmentNumber">
					(obsolete for GetLabelTDRequest).
				</context>
			</context>
		 <context id="GetExportDocTDRequest">
				<context id="ShipmentNumber">
					(obsolete for GetExportDocTDRequest).
					</context>	
		 </context>
  </extension>

<extension id="city">       
      
      <context id="Address">
      </context>
</extension>

<extension id="zip">
      
      <context id="Address">
      </context>
</extension>

<extension id="streetName">       
      
      <context id="Address">
      </context>
</extension>

<extension id="Number">       
      
      <context id="Address">      
Field length must be less than or equal to 10.
</context>
</extension>

<extension id="accountOwner">       
      
      <context id="BankData">
      </context>
</extension>

<extension id="accountNumber">       
      
      <context id="BankData">      
Field length must be less than or equal to 15.
</context>
</extension>

<extension id="bankCode">       
      
      <context id="BankData">      
Field length must be less than or equal to 15.
</context>
</extension>

<extension id="bankName">       
      
      <context id="BankData">
      </context>
</extension>

<extension id="iban">       
      
      <context id="BankData">
      </context>
</extension>

<extension id="note">       
      
      <context id="BankData">      
   Field length must be less than or equal to 70. 
</context>
</extension>

<extension id="name1">       
     
      <context id="Company">      
   Field length must be less than or equal to 30. 
</context>
</extension>

<extension id="name2">       
      
      <context id="Company">      
   Field length must be less than or equal to 30. 
</context>
</extension>

<extension id="phone">       
      
      <context id="Communication">
      </context>
</extension>

<extension id="email">       
      
      <context id="Communication">
      </context>
</extension>

<extension id="mobile">       
      
      <context id="Communication">      
     Field length must be less than or equal to 20.
</context>
</extension>

<extension id="contactPerson">       
      
      <context id="Communication">
      </context>
</extension>

<extension id="countryISOCode">       
      
      <context id="Origin">
      </context>
</extension>

<extension id="state">       
      
      <context id="Origin">
      </context>
</extension>

			]]></xs:documentation>
  </xs:annotation>
  <xs:simpleType name="SequenceNumber">
    <xs:annotation>
      <xs:documentation>A sequence number defined by the (soap-) client. The sequenceNumber is
				returned by the webservice within the result of the createShipment operation, so
				that the client is able to assign the shipment information of the response to the
				shipment data of the request.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="30" />
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="GetVersionResponse">
    <xs:annotation>
      <xs:documentation>The version of the webservice and the version of the software
				build.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="gv:Version">
          <xs:annotation>
            <xs:documentation>The version of the webservice implementation.
						</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="CreateShipmentOrderRequest">
    <xs:annotation>
      <xs:documentation>The shipmentdata for creating a shipment. </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="gv:Version">
          <xs:annotation>
            <xs:documentation>The version of the webservice implementation for which the
							requesting client is developed.</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element maxOccurs="30" name="ShipmentOrder" type="gv:ShipmentOrderType">
          <xs:annotation>
            <xs:documentation>ShipmentOrder is the highest parent element that contains all
							data with respect to one shipment order.</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="ValidateShipmentOrderRequest">
    <xs:annotation>
      <xs:documentation>The shipmentdata for validating a shipment. </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="gv:Version">
          <xs:annotation>
            <xs:documentation>The version of the webservice implementation for which the
							requesting client is developed.</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element maxOccurs="30" name="ShipmentOrder" type="gv:ValidateShipmentOrderType">
          <xs:annotation>
            <xs:documentation>ShipmentOrder is the highest parent element that contains all
							data with respect to one shipment order.</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="CreateShipmentOrderResponse">
    <xs:annotation>
      <xs:documentation>The status of the operation and the shipment identifier (if
				available).</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="gv:Version">
          <xs:annotation>
            <xs:documentation>The version of the webservice implementation.
						</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="Status" type="gv:Statusinformation">
          <xs:annotation>
            <xs:documentation>Success status after processing the overall
							request.</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" maxOccurs="30" name="CreationState" type="gv:CreationState">
          <xs:annotation>
            <xs:documentation>The operation's success status for every single ShipmentOrder
							will be returned by one CreationState element. It is identifiable via
							SequenceNumber.</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="ValidateShipmentResponse">
    <xs:annotation>
      <xs:documentation>The status of the operation and the shipment identifier (if
				available).</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="gv:Version">
          <xs:annotation>
            <xs:documentation>The version of the webservice implementation.
						</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="Status" type="gv:Statusinformation">
          <xs:annotation>
            <xs:documentation>Success status after processing the overall
							request.</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" maxOccurs="30" name="ValidationState" type="gv:ValidationState">
          <xs:annotation>
            <xs:documentation>The operation's success status for every single ShipmentOrder
							will be returned by one CreationState element. It is identifiable via
							SequenceNumber.</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetLabelRequest">
    <xs:annotation>
      <xs:documentation>The identifier for the shipment for which the label url is
				requested.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="gv:Version">
          <xs:annotation>
            <xs:documentation>The version of the webservice implementation for which the
							requesting client is developed.</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element maxOccurs="30" ref="cis:shipmentNumber" />
        <xs:element minOccurs="0" name="labelResponseType">
          <xs:annotation>
            <xs:documentation>Dial to determine label ouput format. Must be either 'URL' or 'B64' = Base64encoded: it is possible to request an URL for receiving the label as PDF stream, or to request the label as base64encoded binary data directly. If not defined by client, web service defaults to 'URL'.</xs:documentation>
          </xs:annotation>
          <xs:simpleType>
            <xs:restriction base="xs:string">
              <xs:enumeration value="B64" />
              <xs:enumeration value="URL" />
            </xs:restriction>
          </xs:simpleType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetLabelResponse">
    <xs:annotation>
      <xs:documentation>The status of the operation and requested urls for getting the
				label.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="gv:Version">
          <xs:annotation>
            <xs:documentation>The version of the webservice implementation.
						</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="Status" type="gv:Statusinformation">
          <xs:annotation>
            <xs:documentation>Success status after processing the overall
							request.</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" maxOccurs="30" name="LabelData" type="gv:LabelData">
          <xs:annotation>
            <xs:documentation>For every ShipmentNumber requested, one LabelData node is
							returned that contains the status of the label retrieval operation and
							the URL for the label (if available). </xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="DoManifestRequest">
    <xs:annotation>
      <xs:documentation>The identifier for the shipment which should be
				manifested.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="gv:Version">
          <xs:annotation>
            <xs:documentation>The version of the webservice implementation for which the
							requesting client is developed.</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element maxOccurs="30" ref="cis:shipmentNumber">
          <xs:annotation>
            <xs:documentation>The identifier of the shipment. The shipment number is read
							from ShipmentNumberType-&gt;shipmentNumber </xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="DoManifestResponse">
    <xs:annotation>
      <xs:documentation>The status of the operation</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="gv:Version">
          <xs:annotation>
            <xs:documentation>
							The version of the webservice implementation.
						</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="Status" type="gv:Statusinformation">
          <xs:annotation>
            <xs:documentation>Status of the request (value of zero means, the request was
							processed without error; value greater than zero indicates that an error
							occurred).</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" maxOccurs="30" name="ManifestState" type="gv:ManifestState">
          <xs:annotation>
            <xs:documentation>The status of the operation for the corresponding
							shipment.</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="DeleteShipmentOrderRequest">
    <xs:annotation>
      <xs:documentation>
				The identifier for the shipment which should be
				deleted.
			</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="gv:Version">
          <xs:annotation>
            <xs:documentation>
							The version of the webservice implementation for which the
							requesting client is developed.
						</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element maxOccurs="30" ref="cis:shipmentNumber">
          <xs:annotation>
            <xs:documentation>
							In order to delete previously created DD shipment orders,
							ShipmentNumber. ShipmentNumber is required. This parent element inherits
							from ShipmentNumberType, therefore all following subelements are valid
							according to schema, however the web service accepts shipmentNumber
							only. Note: you can delete more than one shipment by passing multiple
							ShipmentNumber containers.
						</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="DeleteShipmentOrderResponse">
    <xs:annotation>
      <xs:documentation>The status of the operation.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="gv:Version">
          <xs:annotation>
            <xs:documentation>The version of the webservice implementation.
						</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="Status" type="gv:Statusinformation">
          <xs:annotation>
            <xs:documentation>Success status after processing the overall
							request.</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" maxOccurs="30" name="DeletionState" type="gv:DeletionState">
          <xs:annotation>
            <xs:documentation>
							For every ShipmentNumber requested, one DeletionState node is
							returned that contains the status of the respective deletion
							operation.
						</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetExportDocRequest">
    <xs:annotation>
      <xs:documentation>
				The identifier for the shipment for which the export document url is
				requested.
			</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="gv:Version">
          <xs:annotation>
            <xs:documentation>The version of the webservice implementation for which the
							requesting client is developed.</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element maxOccurs="30" ref="cis:shipmentNumber">
          <xs:annotation>
            <xs:documentation>To request export documents, ShipmentNumber.
							ShipmentNumber is required. This parent element inherits from
							ShipmentNumberType, therefore all following subelements are valid
							according to schema, however the web service accepts shipmentNumber
							only.</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="exportDocResponseType">
          <xs:annotation>
            <xs:documentation>Dial to determine label ouput format. Must be either 'URL' or 'B64' = Base64encoded: it is possible to request an URL for receiving the label as PDF stream, or to request the label as base64encoded binary data directly. If not defined by client, web service defaults to 'URL'.</xs:documentation>
          </xs:annotation>
          <xs:simpleType>
            <xs:restriction base="xs:string">
              <xs:enumeration value="URL" />
              <xs:enumeration value="B64" />
            </xs:restriction>
          </xs:simpleType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetExportDocResponse">
    <xs:annotation>
      <xs:documentation>The status of the operation and requested export
				document.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="gv:Version">
          <xs:annotation>
            <xs:documentation>The version of the webservice implementation.</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="Status" type="gv:Statusinformation">
          <xs:annotation>
            <xs:documentation>Status of the request (value of zero means, the request was
							processed without error; value greater than zero indicates that an error
							occurred).</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" maxOccurs="30" name="ExportDocData" type="gv:ExportDocData">
          <xs:annotation>
            <xs:documentation>Contains the result of the document processing: in case of no
							errors, a base64 encoded PDF is contained; also, the status of this
							particular document generation and the passed shipment number are
							returned.</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetManifestRequest">
    <xs:annotation>
      <xs:documentation>The request data for the manifest document</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="gv:Version">
          <xs:annotation>
            <xs:documentation>The version of the webservice implementation for which the
							requesting client is developed.</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="manifestDate" type="xs:string">
          <xs:annotation>
            <xs:documentation>Date in format yyyy-mm-dd</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetManifestResponse">
    <xs:annotation>
      <xs:documentation>The status of the operation and requested export
				document.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="gv:Version">
          <xs:annotation>
            <xs:documentation>The version of the webservice implementation.</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="Status" type="gv:Statusinformation">
          <xs:annotation>
            <xs:documentation>Status of the request (value of zero means, the request was
							processed without error; value greater than zero indicates that an error
							occurred).</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="manifestData" type="xs:base64Binary">
          <xs:annotation>
            <xs:documentation>The Base64 encoded pdf data for receiving the
							manifest.</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="UpdateShipmentOrderRequest">
    <xs:annotation>
      <xs:documentation>The shipmentdata for creating a shipment. </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="gv:Version">
          <xs:annotation>
            <xs:documentation>The version of the webservice implementation for which the
							requesting client is developed.</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="1" maxOccurs="1" ref="cis:shipmentNumber">
          <xs:annotation>
            <xs:documentation>The ShipmentNumber of the shipment, which sould be updated.
							ShipmentNumber is required. This parent element inherits from
							ShipmentNumberType, therefore all following subelements are valid
							according to schema, however the web service accepts shipmentNumber
							only.</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="ShipmentOrder" type="gv:ShipmentOrderType">
          <xs:annotation>
            <xs:documentation>ShipmentOrder contains an update of all data of the selected
							shipment order.</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="UpdateShipmentOrderResponse">
    <xs:annotation>
      <xs:documentation>The status of the operation and the shipment identifier (if
				available).</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="gv:Version">
          <xs:annotation>
            <xs:documentation>The version of the webservice implementation.
						</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="Status" type="gv:Statusinformation">
          <xs:annotation>
            <xs:documentation>Success status after processing the overall
							request.</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" maxOccurs="1" name="LabelData" type="gv:LabelData">
          <xs:annotation>
            <xs:documentation>The operation's success status for every single ShipmentOrder will be
							returned by one UpdateState element. It is identifiable via ShipmentNumber.
						</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="CreationState">
    <xs:annotation>
      <xs:documentation>The operation's success status for every single ShipmentOrder will be
				returned by one CreationState element. It is identifiable via SequenceNumber.
			</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="sequenceNumber" type="gv:SequenceNumber">
        <xs:annotation>
          <xs:documentation>Identifier for ShipmentOrder set by client application in
						CreateShipment request. The defined value is looped through and returned
						unchanged by the web service within the response of createShipment. The
						client can therefore assign the status information of the response to the
						correct ShipmentOrder of the request.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="LabelData" type="gv:LabelData">
        <xs:annotation>
          <xs:documentation>For successful operations, a shipment number is created and
						returned. Depending on the invoked product.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ValidationState">
    <xs:annotation>
      <xs:documentation>The operation's success status for every single ShipmentOrder will be
				returned by one CreationState element. It is identifiable via SequenceNumber.
			</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="1" maxOccurs="1" name="sequenceNumber" type="gv:SequenceNumber">
        <xs:annotation>
          <xs:documentation>Identifier for ShipmentOrder set by client application in
						CreateShipment request. The defined value is looped through and returned
						unchanged by the web service within the response of createShipment. The
						client can therefore assign the status information of the response to the
						correct ShipmentOrder of the request.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="1" maxOccurs="1" name="Status" type="gv:Statusinformation">
        <xs:annotation>
          <xs:documentation>
						Success status of processing a particular shipment.
					</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Statusinformation">
    <xs:annotation>
      <xs:documentation>The status information used in different situations.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="statusCode" type="xs:integer">
        <xs:annotation>
          <xs:documentation>Overall status of the entire request: A value of zero means, the
						request was processed without error. A value greater than zero indicates
						that an error occurred. The detailed mapping and explanation of returned
						status codes is contained in the list.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="1" maxOccurs="1" name="statusText" type="xs:string">
        <xs:annotation>
          <xs:documentation>Explanation of the statuscode and potential errors.
					</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="1" maxOccurs="30" name="statusMessage" type="xs:string">
        <xs:annotation>
          <xs:documentation>Explanation of the statuscode and potential errors.
					</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PieceInformation">
    <xs:annotation>
      <xs:documentation>Information about each piece (e.g. the generated licence plate). For
				every piece, a PieceInformation container holds the license plate
				number.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="PieceNumber" type="cis:ShipmentNumberType">
        <xs:annotation>
          <xs:documentation>For every piece a piece number is created that is of one of the
						following types (mostly licensePlate).</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ShipmentOrderType">
    <xs:annotation>
      <xs:documentation>Data for the creation of a shipment. </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="sequenceNumber" type="gv:SequenceNumber">
        <xs:annotation>
          <xs:documentation>Free field to to tag multiple shipment orders individually by
						client. Essential for later mapping of response data returned by webservice
						upon createShipment operation. Allows client to assign the shipment
						information of the response to the correct shipment order of the
						request.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Shipment">
        <xs:annotation>
          <xs:documentation>Is the core element of a ShipmentOrder. 
It contains all relevant information of the shipment.
					</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="ShipmentDetails" type="gv:ShipmentDetailsTypeType">
              <xs:annotation>
                <xs:documentation>Contains the information of the shipment product
									code, weight and size characteristics and services to be used.
								</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="Shipper" type="gv:ShipperType">
              <xs:annotation>
                <xs:documentation>Contains relevant information about
									the Shipper.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="Receiver" type="gv:ReceiverType">
              <xs:annotation>
                <xs:documentation>Contains relevant information about
									Receiver.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="ReturnReceiver" type="gv:ShipperType">
              <xs:annotation>
                <xs:documentation>To be used if a return label address shall be generated.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="ExportDocument" type="gv:ExportDocumentType">
              <xs:annotation>
                <xs:documentation>For international shipments, this section contains
									information about the exported goods relevant for customs. For
									international shipments: commercial invoice, dispatch note (CP71) and
									customs declaration (CN23) are printed into returned label information.
									Data is also transferred as electronic declaration to customs.
									For european shipments. For
									international shipments, ExportDocument can contain one or more positions in child
									element. </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="PrintOnlyIfCodeable" type="gv:Serviceconfiguration">
        <xs:annotation>
          <xs:documentation>If set to true (=1), the label will be only be printable, if the
						receiver address is valid.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="labelResponseType">
        <xs:annotation>
          <xs:documentation>Dial to determine label ouput format. Must be either 'URL' or 'B64' = Base64encoded: it is possible to request an URL for receiving the label as PDF stream, or to request the label as base64encoded binary data directly. If not defined by client, web service defaults to 'URL'.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="URL" />
            <xs:enumeration value="B64" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ValidateShipmentOrderType">
    <xs:annotation>
      <xs:documentation>Data for the creation of a shipment. </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="sequenceNumber" type="gv:SequenceNumber">
        <xs:annotation>
          <xs:documentation>Free field to to tag multiple shipment orders individually by
						client. Essential for later mapping of response data returned by webservice
						upon createShipment operation. Allows client to assign the shipment
						information of the response to the correct shipment order of the
						request.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Shipment">
        <xs:annotation>
          <xs:documentation>Is the core element of a ShipmentOrder. 
						It contains all relevant information of the shipment.
					</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="ShipmentDetails" type="gv:ShipmentDetailsTypeType">
              <xs:annotation>
                <xs:documentation>Contains the information of the shipment product
									code, weight and size characteristics and services to be used.
								</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="Shipper" type="gv:ShipperType">
              <xs:annotation>
                <xs:documentation>Contains relevant information about
									the Shipper.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="Receiver" type="gv:ReceiverType">
              <xs:annotation>
                <xs:documentation>Contains relevant information about
									Receiver.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="ReturnReceiver" type="gv:ShipperType">
              <xs:annotation>
                <xs:documentation>To be used if a return label address shall be generated.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="ExportDocument" type="gv:ExportDocumentType">
              <xs:annotation>
                <xs:documentation>For international shipments, this section contains
									information about the exported goods relevant for customs. For
									international shipments: commercial invoice, dispatch note (CP71) and
									customs declaration (CN23) are printed into returned label information.
									Data is also transferred as electronic declaration to customs.
									For european shipments. For
									international shipments, ExportDocument can contain one or more positions in child
									element. </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="PrintOnlyIfCodeable" type="gv:Serviceconfiguration">
        <xs:annotation>
          <xs:documentation>If set to true (=1), the label will be only be printable, if the
						receiver address is valid.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ShipperTypeType">
    <xs:annotation>
      <xs:documentation>The data of the shipper or return receiver.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Name" type="cis:NameType">
        <xs:annotation>
          <xs:documentation>Name of the Return Receiver</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Address" type="cis:NativeAddressType">
        <xs:annotation>
          <xs:documentation>Contains address data.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Communication" type="cis:CommunicationType">
        <xs:annotation>
          <xs:documentation>Information about communication.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ShipperType">
    <xs:annotation>
      <xs:documentation>The data of the shipper of a shipment. </xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="gv:ShipperTypeType" />
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ReceiverTypeType">
    <xs:annotation>
      <xs:documentation>The receiver data.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element ref="cis:name1" />
      <xs:choice>
        <xs:element name="Address" type="cis:ReceiverNativeAddressType">
          <xs:annotation>
            <xs:documentation>The address data of the receiver.</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="Packstation" type="cis:PackStationType">
          <xs:annotation>
            <xs:documentation>The address of the receiver is a german Packstation.</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="Postfiliale" type="cis:PostfilialeType">
          <xs:annotation>
            <xs:documentation>The address of the receiver is a german Postfiliale.</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="ParcelShop" type="cis:ParcelShopType">
          <xs:annotation>
            <xs:documentation>The address of the receiver is a european Parcelshop.</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:choice>
      <xs:element name="Communication" type="cis:CommunicationType">
        <xs:annotation>
          <xs:documentation>Information about communication.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ReceiverType">
    <xs:annotation>
      <xs:documentation>The receiver data of a shipment. </xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="gv:ReceiverTypeType" />
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="Ident">
    <xs:annotation>
      <xs:documentation>Identity data (used for ident services). </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="FirstName" type="xs:string">
        <xs:annotation>
          <xs:documentation>First name of the person to be verified. Field length must be
						less than or equal to 30.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="LastName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Last name of the person to be verified. Field length must be less
						than or equal to 30.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Street" type="xs:string">
        <xs:annotation>
          <xs:documentation>Name of the street of registered address. Field length must be
						less than or equal to 30.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="HouseNumber" type="xs:string">
        <xs:annotation>
          <xs:documentation>House number of registered address. Field length must be less
						than or equal to 10.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Postcode" type="xs:string">
        <xs:annotation>
          <xs:documentation>Postcode of registered address. Field length must be less than or
						equal to 15.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="City" type="xs:string">
        <xs:annotation>
          <xs:documentation>City of registered address. Field length must be less than or
						equal to 30.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="DateOfBirth" type="xs:string">
        <xs:annotation>
          <xs:documentation>Person's date of birth. Format must be yyyy-mm-dd.
					</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Nationality" type="xs:string">
        <xs:annotation>
          <xs:documentation>Person's nationality. Field length must be less than or equal to
						30.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ShipmentDetailsType">
    <xs:annotation>
      <xs:documentation>Details of a shipment.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="product" type="xs:string">
        <xs:annotation>
          <xs:documentation>
						Determines the DHL Paket product to be ordered.
						V01PAK:    Paket National;
						V53WPAK:   Weltpaket;
						V54EPAK:   Europaket;
						V06TG:     Kurier Taggleich;
						V06WZ:     Kurier Wunschzeit;
						V86PARCEL: DHL Paket Austria;
						V87PARCEL: DHL PAKET Connect;
						V82PARCEL: DHL PAKET International
					</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element ref="cis:accountNumber" />
      <xs:element minOccurs="0" name="customerReference">
        <xs:annotation>
          <xs:documentation>A reference number that the client can assign for better association purposes. Appears on shipment label.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:maxLength value="35" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="shipmentDate">
        <xs:annotation>
          <xs:documentation>Date of shipment should be close to current date and must not be
						in the past. Iso format required: yyyy-mm-dd.
					</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="10" />
            <xs:maxLength value="10" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="returnShipmentAccountNumber">
        <xs:annotation>
          <xs:documentation>DHL account number (14 digits).</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="14" />
            <xs:maxLength value="14" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="returnShipmentReference">
        <xs:annotation>
          <xs:documentation>A reference number that the client can assign for better association purposes. Appears on return shipment label.
					</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:maxLength value="35" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ShipmentDetailsTypeType">
    <xs:annotation>
      <xs:documentation>Details of a shipment.</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="gv:ShipmentDetailsType">
        <xs:sequence>
          <xs:annotation>
            <xs:documentation>extends the ShipmentDetailsType </xs:documentation>
          </xs:annotation>
          <xs:element maxOccurs="1" name="ShipmentItem" type="gv:ShipmentItemType">
            <xs:annotation>
              <xs:documentation>For every parcel specified, contains weight in kg, length in cm, width in cm and height in cm. </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="Service" type="gv:ShipmentService">
            <xs:annotation>
              <xs:documentation>Use one dedicated Service node for each service to be
								booked with the shipment product. Add another Service node for
								booking a further service and so on. Successful booking of a
								particular service depends on account permissions and product's
								service combinatorics. I.e. not every service is allowed for every
								product, or can be combined with all other allowed services. The
								service bundles that contain all services are the
								following.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="Notification" type="gv:ShipmentNotificationType">
            <xs:annotation>
              <xs:documentation>Mechanism to send notifications by email after successful
								manifesting of shipment.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="BankData" type="cis:BankType">
            <xs:annotation>
              <xs:documentation>Bank data can be provided here for different purposes.
								E.g. if COD is booked as service, bank data must be provided by DHL
								customer (mandatory server logic). The collected money will be
								transferred to specified bank account.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ShipmentItemType">
    <xs:annotation>
      <xs:documentation>Item/Piece data.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="weightInKG">
        <xs:annotation>
          <xs:documentation>The weight of the piece in kg
					</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:decimal">
            <xs:fractionDigits value="2" />
            <xs:minInclusive value="0.0" />
            <xs:maxInclusive value="9999999.99" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="lengthInCM">
        <xs:annotation>
          <xs:documentation>The length of the piece in cm.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:integer">
            <xs:minInclusive value="0" />
            <xs:totalDigits value="4" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="widthInCM">
        <xs:annotation>
          <xs:documentation>The width of the piece in cm.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:integer">
            <xs:minInclusive value="0" />
            <xs:totalDigits value="4" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="heightInCM">
        <xs:annotation>
          <xs:documentation>The height of the piece in cm.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:integer">
            <xs:minInclusive value="0" />
            <xs:totalDigits value="4" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ShipmentItemTypeType">
    <xs:annotation>
      <xs:documentation>Item/Piece data of a shipment. </xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="gv:ShipmentItemType" />
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ShipmentService">
    <xs:annotation>
      <xs:documentation>GKV shipment services.</xs:documentation>
    </xs:annotation>
    <xs:all>
      <xs:annotation>
        <xs:documentation>can be</xs:documentation>
      </xs:annotation>
      <xs:element minOccurs="0" maxOccurs="1" name="DayOfDelivery" type="gv:ServiceconfigurationDateOfDelivery">
        <xs:annotation>
          <xs:documentation>
						Day of Delivery for product:
						V06TG: Kurier Taggleich;
						V06WZ: Kurier Wunschzeit
					</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" maxOccurs="1" name="DeliveryTimeframe" type="gv:ServiceconfigurationDeliveryTimeframe">
        <xs:annotation>
          <xs:documentation>
						Timeframe of delivery for product:
						V06TG: Kurier Taggleich;
						V06WZ: Kurier Wunschzeit
					</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" maxOccurs="1" name="IndividualSenderRequirement" type="gv:ServiceconfigurationISR">
        <xs:annotation>
          <xs:documentation>
						Individual sender requirements for product:
						V06TG: Kurier Taggleich;
						V06WZ: Kurier Wunschzeit
					</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" maxOccurs="1" name="ShipmentHandling" type="gv:ServiceconfigurationShipmentHandling">
        <xs:annotation>
          <xs:documentation>
						Shipment handling for product:
						V06TG: Kurier Taggleich;
						V06WZ: Kurier Wunschzeit
					</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" maxOccurs="1" name="Endorsement" type="gv:ServiceconfigurationEndorsement">
        <xs:annotation>
          <xs:documentation>Service "Endorsement".</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" maxOccurs="1" name="VisualCheckOfAge" type="gv:ServiceconfigurationVisualAgeCheck">
        <xs:annotation>
          <xs:documentation>Service visual age check</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" maxOccurs="1" name="PreferredLocation" type="gv:ServiceconfigurationDetails">
        <xs:annotation>
          <xs:documentation>Service preferred location</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" maxOccurs="1" name="PreferredNeighbour" type="gv:ServiceconfigurationDetails">
        <xs:annotation>
          <xs:documentation>Service preferred neighbour</xs:documentation>
          <xs:documentation>The details field should be set to the preferred neighbours name.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" maxOccurs="1" name="GoGreen" type="gv:Serviceconfiguration">
        <xs:annotation>
          <xs:documentation>GoGreen</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" maxOccurs="1" name="Perishables" type="gv:Serviceconfiguration">
        <xs:annotation>
          <xs:documentation>DHL Kurier Verderbliche Ware</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" maxOccurs="1" name="Personally" type="gv:Serviceconfiguration">
        <xs:annotation>
          <xs:documentation>Invoke service personal handover.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" maxOccurs="1" name="ReturnReceipt" type="gv:Serviceconfiguration">
        <xs:annotation>
          <xs:documentation>Invoke service return receipt.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" maxOccurs="1" name="Premium" type="gv:Serviceconfiguration">
        <xs:annotation>
          <xs:documentation>Premium for fast and safe delivery of international
							shipments.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" maxOccurs="1" name="CashOnDelivery" type="gv:ServiceconfigurationCashOnDelivery">
        <xs:annotation>
          <xs:documentation>Service Cash on delivery.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" maxOccurs="1" name="AdditionalInsurance" type="gv:ServiceconfigurationAdditionalInsurance">
        <xs:annotation>
          <xs:documentation>Insure shipment with higher than standard amount.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" maxOccurs="1" name="BulkyGoods" type="gv:Serviceconfiguration">
        <xs:annotation>
          <xs:documentation>Service to ship bulky goods.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="Serviceconfiguration">
    <xs:attribute name="active" use="required">
      <xs:annotation>
        <xs:documentation>Indicates, if the option is on/off</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="0" />
          <xs:enumeration value="1" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="ServiceconfigurationDetails">
    <xs:attribute name="active" use="required">
      <xs:annotation>
        <xs:documentation>Indicates, if the option is on/off</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="0" />
          <xs:enumeration value="1" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="details" use="required">
      <xs:annotation>
        <xs:documentation>Details of the Service (freetext)</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:minLength value="1" />
          <xs:maxLength value="100" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="ServiceconfigurationType">
    <xs:attribute name="active" use="required">
      <xs:annotation>
        <xs:documentation>Indicates, if the option is on/off</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="0" />
          <xs:enumeration value="1" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="Type" use="required">
      <xs:annotation>
        <xs:documentation>Type of the Service (List of Types)</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:minLength value="1" />
          <xs:maxLength value="100" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="ServiceconfigurationEndorsement">
    <xs:attribute name="active" use="required">
      <xs:annotation>
        <xs:documentation>Indicates, if the option is on/off</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="0" />
          <xs:enumeration value="1" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="type" use="required">
      <xs:annotation>
        <xs:documentation>
					Service endorsement is used to specify handling if recipient not met
					There are the following types are allowed:
					For Germany:
					SOZU (Return immediately),
					ZWZU (2nd attempt of Delivery);
					for International:
					IMMEDIATE (Sending back immediately to sender),
					AFTER_DEADLINE (Sending back immediately to sender after expiration of time),
					ABANDONMENT (Abandonment of parcel at the hands of sender (free of charge))
				</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="SOZU" />
          <xs:enumeration value="ZWZU" />
          <xs:enumeration value="IMMEDIATE" />
          <xs:enumeration value="AFTER_DEADLINE" />
          <xs:enumeration value="ABANDONMENT" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="ServiceconfigurationISR">
    <xs:attribute name="active" use="required">
      <xs:annotation>
        <xs:documentation>Indicates, if the option is on/off</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="0" />
          <xs:enumeration value="1" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="details" use="required">
      <xs:annotation>
        <xs:documentation>Individual details for handling (freetext)</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:minLength value="1" />
          <xs:maxLength value="250" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="ServiceconfigurationDH">
    <xs:attribute name="active" use="required">
      <xs:annotation>
        <xs:documentation>Indicates, if the option is on/off</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="0" />
          <xs:enumeration value="1" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="Days" use="required">
      <xs:annotation>
        <xs:documentation>Number of Days to hold shipment before shipment will be returend
					to sender</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:minLength value="1" />
          <xs:maxLength value="1" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="ServiceconfigurationVisualAgeCheck">
    <xs:attribute name="active" use="required">
      <xs:annotation>
        <xs:documentation>Indicates, if the option is on/off</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="0" />
          <xs:enumeration value="1" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="type" use="required">
      <xs:annotation>
        <xs:documentation>
					Service VisualCheckOfAge is used to specify the minimum age of the recipient
					There are the following types are allowed:
					• A16
					• A18
				</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:minLength value="3" />
          <xs:maxLength value="3" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="ServiceconfigurationDeliveryTimeframe">
    <xs:attribute name="active" use="required">
      <xs:annotation>
        <xs:documentation>Indicates, if the option is on/off</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="0" />
          <xs:enumeration value="1" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="type" use="required">
      <xs:annotation>
        <xs:documentation>
					Timeframe of delivery, if the option is used: ValidValues are
					10001200: 10:00 until 12:00;
					12001400: 12:00 until 14:00
					14001600: 14:00 until 16:00;
					16001800: 16:00 until 18:00
					18002000: 18:00 until 20:00;
					19002100: 19:00 until 21:00
				</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:minLength value="8" />
          <xs:maxLength value="8" />
          <xs:enumeration value="10001200" />
          <xs:enumeration value="12001400" />
          <xs:enumeration value="14001600" />
          <xs:enumeration value="16001800" />
          <xs:enumeration value="18002000" />
          <xs:enumeration value="19002100" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="ServiceconfigurationDateOfDelivery">
    <xs:attribute name="active" use="required">
      <xs:annotation>
        <xs:documentation>Indicates, if the option is on/off</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="0" />
          <xs:enumeration value="1" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="details" use="required">
      <xs:annotation>
        <xs:documentation>Day of Delivery, if the option is used: Date in format
					yyyy-mm-dd</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:minLength value="10" />
          <xs:maxLength value="10" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="ServiceconfigurationAdditionalInsurance">
    <xs:attribute name="active" use="required">
      <xs:annotation>
        <xs:documentation>Indicates, if the option is on/off</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="0" />
          <xs:enumeration value="1" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="insuranceAmount" use="required">
      <xs:annotation>
        <xs:documentation>Please enter the Amount that should be insured</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:decimal">
          <xs:minInclusive value="0.0" />
          <xs:maxInclusive value="9999999999" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="ServiceconfigurationCashOnDelivery">
    <xs:attribute name="active" use="required">
      <xs:annotation>
        <xs:documentation>Indicates, if the option is on/off</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="0" />
          <xs:enumeration value="1" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="addFee" use="optional">
      <xs:annotation>
        <xs:documentation>Indicates, if the option is on/off</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="0" />
          <xs:enumeration value="1" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="codAmount" use="required">
      <xs:annotation>
        <xs:documentation>
					Money amount to be collected. Mandatory if COD is chosen.
					Attention: Please add the additional 2 EURO transmittal fee when entering the COD Amount
				</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:decimal">
          <xs:minInclusive value="0.0" />
          <xs:maxInclusive value="9999999999" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="ServiceconfigurationShipmentHandling">
    <xs:attribute name="active" use="required">
      <xs:annotation>
        <xs:documentation>Indicates, if the option is on/off</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="0" />
          <xs:enumeration value="1" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="type" use="required">
      <xs:annotation>
        <xs:documentation><![CDATA[
										Type of shipment handling. There are the following types are allowed:
										a: Remove content, return box;
										b: Remove content, pick up and dispose cardboard packaging;
										c: Handover parcel/box to customer – no disposal of cardboar.d/box;
										d: Remove bag from of cooling unit and handover to customer;
										e: Remove content, apply return label und seal box, return box
										]]></xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:minLength value="1" />
          <xs:maxLength value="1" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="ServiceconfigurationUnfree">
    <xs:attribute name="active" use="required">
      <xs:annotation>
        <xs:documentation>Indicates, if the option is on/off</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="0" />
          <xs:enumeration value="1" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="PaymentType" use="required">
      <xs:annotation>
        <xs:documentation>Mandatory if unfree is chosen. 0= cash / 1=
					invoice. </xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="0" />
          <xs:enumeration value="1" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="CustomerNumber" use="optional">
      <xs:annotation>
        <xs:documentation>Paid by third party, e.g. Receiver. DHL account
					number mandatory if PaymentType 1 = invoice is selected.
					Field length must be less than or equal to 10.
				</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:minLength value="0" />
          <xs:maxLength value="255" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="ServiceconfigurationIC">
    <xs:sequence>
      <xs:element name="Ident">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="SurenameName">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:minLength value="0" />
                  <xs:maxLength value="255" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element name="FirstnameName">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:minLength value="0" />
                  <xs:maxLength value="255" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element name="BirthdayName">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:minLength value="0" />
                  <xs:maxLength value="255" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element name="MinimumAgeName">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:minLength value="0" />
                  <xs:maxLength value="255" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="active" use="required">
      <xs:annotation>
        <xs:documentation>Indicates, if the option is on/off</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="0" />
          <xs:enumeration value="1" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="ShipmentNotificationType">
    <xs:annotation>
      <xs:documentation>Notification type</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="recipientEmailAddress">
        <xs:annotation>
          <xs:documentation>Email address of the recipient. Mandatory if Notification is set.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:maxLength value="70" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ExportDocumentType">
    <xs:annotation>
      <xs:documentation>The data of the export document for a shipment.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="invoiceNumber">
        <xs:annotation>
          <xs:documentation>In case invoice has a number, client app can provide it in this
						field.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:maxLength value="35" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="1" name="exportType">
        <xs:annotation>
          <xs:documentation>Export type ("OTHER", "PRESENT", "COMMERCIAL_SAMPLE",
						"DOCUMENT", "RETURN_OF_GOODS") (depends on chosen product -&gt; only
						mandatory for international, non EU shipments). </xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value="OTHER" />
            <xs:enumeration value="PRESENT" />
            <xs:enumeration value="COMMERCIAL_SAMPLE" />
            <xs:enumeration value="DOCUMENT" />
            <xs:enumeration value="RETURN_OF_GOODS" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="exportTypeDescription">
        <xs:annotation>
          <xs:documentation>Description mandatory if ExportType is OTHER.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="1" />
            <xs:maxLength value="256" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="termsOfTrade">
        <xs:annotation>
          <xs:documentation>
						Element provides terms of trades,
						incoterms codes:
						DDP (Delivery Duty Paid)
						DXV (Delivery duty paid (excl. VAT ))
						DDU (DDU - Delivery Duty Paid)
						DDX (Delivery duty paid (excl. Duties, taxes and VAT)
						are vaild values.
					</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="3" />
            <xs:maxLength value="3" />
            <xs:enumeration value="DDP" />
            <xs:enumeration value="DXV" />
            <xs:enumeration value="DDU" />
            <xs:enumeration value="DDX" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="placeOfCommital">
        <xs:annotation>
          <xs:documentation>PlaceOfCommital is a Locaton</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:maxLength value="35" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="1" name="additionalFee">
        <xs:annotation>
          <xs:documentation>Additional custom fees to be payed. </xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:decimal">
            <xs:fractionDigits value="2" />
            <xs:minInclusive value="0.0" />
            <xs:maxInclusive value="9999999.99" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="permitNumber">
        <xs:annotation>
          <xs:documentation>The permit number.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:maxLength value="10" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="attestationNumber">
        <xs:annotation>
          <xs:documentation>The attestation number.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:maxLength value="35" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="WithElectronicExportNtfctn" type="gv:Serviceconfiguration">
        <xs:annotation>
          <xs:documentation>Sets an electronic export notification. </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" maxOccurs="6" name="ExportDocPosition">
        <xs:annotation>
          <xs:documentation>One or more child elements for
						every position to be defined within the Export Document.
						Each one contains description, country code of origin, amount, net weight, customs value.
						Multiple positions only possible for international shipments, other than EU shipments.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="description">
              <xs:annotation>
                <xs:documentation>Description of the unit / position</xs:documentation>
              </xs:annotation>
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:maxLength value="256" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element name="countryCodeOrigin">
              <xs:annotation>
                <xs:documentation>Country's ISO-Code (ISO-2- Alpha) of the unit / position
								</xs:documentation>
              </xs:annotation>
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:minLength value="2" />
                  <xs:maxLength value="2" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element name="customsTariffNumber">
              <xs:annotation>
                <xs:documentation>Customs tariff number of the unit / position</xs:documentation>
              </xs:annotation>
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:maxLength value="10" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element name="amount">
              <xs:annotation>
                <xs:documentation>Quantity of the unit / position</xs:documentation>
              </xs:annotation>
              <xs:simpleType>
                <xs:restriction base="xs:integer">
                  <xs:minInclusive value="1" />
                  <xs:totalDigits value="10" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element name="netWeightInKG">
              <xs:annotation>
                <xs:documentation>Net weight of the unit / position.</xs:documentation>
              </xs:annotation>
              <xs:simpleType>
                <xs:restriction base="xs:decimal">
                  <xs:fractionDigits value="2" />
                  <xs:minInclusive value="0.0" />
                  <xs:maxInclusive value="999999.99" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element name="customsValue">
              <xs:annotation>
                <xs:documentation>customs value amount of the unit / position</xs:documentation>
              </xs:annotation>
              <xs:simpleType>
                <xs:restriction base="xs:decimal">
                  <xs:fractionDigits value="2" />
                  <xs:minInclusive value="0.0" />
                  <xs:maxInclusive value="999999.99" />
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="FurtherAddressesType">
    <xs:annotation>
      <xs:documentation><![CDATA[Further address information
The following data fields from the cis_base-types are processed/mandatory/optional:
-------------------------------------------------------------------------------------------------------
Salutation		 (optional) : cis:NameType->Person->salutation
Company Name 1   (mandatory): cis:NameType->Company->name1
Company Name 2   (optional) : cis:NameType->Company->name2
Contact Name     (mandatory): cis:CommunicationType->contactPerson
Street Name      (mandatory): cis:NativeAddressType->streetName
Street Number    (mandatory): cis:NativeAddressType->streetNumber
Add. Address     (optional) : cis:NativeAddressType->careOfName
Postcode         (mandatory): cis:NativeAddressType->zip
City Name		 (mandatory): cis:NativeAddressType->city
ISO Country Code (mandatory): cis:NativeAddressType->Origin->CountryType->countryISOType 
Phone Number     (mandatory): cis:CommunicationType->phone
Email Address    (mandatory): cis:CommunicationType->email						
			]]></xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="DeliveryAdress">
        <xs:annotation>
          <xs:documentation>Mandatory if further address is to be specified.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Company" type="cis:NameType">
              <xs:annotation>
                <xs:documentation>Determines whether further address is one of the
									following types.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="Name3" type="xs:string">
              <xs:annotation>
                <xs:documentation>Extra data for name extension.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="Address" type="cis:NativeAddressType">
              <xs:annotation>
                <xs:documentation>Contains address data.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="Communication" type="cis:CommunicationType">
              <xs:annotation>
                <xs:documentation>Info about communication.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="LabelData">
    <xs:annotation>
      <xs:documentation>The status of the getLabel operation and the url for requesting the label
				(if available).</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="1" maxOccurs="1" name="Status" type="gv:Statusinformation">
        <xs:annotation>
          <xs:documentation>Success status of processing retrieval of particular shipment
						label.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" maxOccurs="1" ref="cis:shipmentNumber">
        <xs:annotation>
          <xs:documentation>For successful and unsuccessful operations, the requested
						ShipmentNumber of the label to be retrieved is returned. This is no matter
						if it the operation could be performed or not.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:choice minOccurs="0" maxOccurs="1">
        <xs:element minOccurs="0" name="labelUrl" type="xs:string">
          <xs:annotation>
            <xs:documentation>If label output format was requested as 'URL' via
						LabelResponseType, this element will be returned. It contains the URL to
						access the PDF label. This is default output format if not specified other
						by client in labelResponseType.
						Depending on setting in customer profile all labels or just the shipmentlabel.
					</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="labelData" type="xs:base64Binary">
          <xs:annotation>
            <xs:documentation>
						Label as base64 encoded pdf data,
						depending on setting in customer profile all labels or just the shipmentlabel.
					</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:choice>
      <xs:choice minOccurs="0" maxOccurs="1">
        <xs:element minOccurs="0" name="returnLabelUrl" type="xs:string">
          <xs:annotation>
            <xs:documentation>If label output format was requested as 'URL' via
						LabelResponseType, this element will be returned. It contains the URL to
						access the PDF label. This is default output format if not specified other
						by client in labelResponseType.
						Depending on setting in customer profile all labels or just the returnshipmentlabel.
					</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="returnLabelData" type="xs:base64Binary">
          <xs:annotation>
            <xs:documentation>
						Label as base64 encoded pdf data,
						depending on setting in customer profile all labels or just the returnshipmentlabel.
					</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:choice>
      <xs:choice minOccurs="0" maxOccurs="1">
        <xs:element minOccurs="0" name="exportLabelUrl" type="xs:string">
          <xs:annotation>
            <xs:documentation>If label output format was requested as 'URL' via
						LabelResponseType, this element will be returned. It contains the URL to
						access the PDF label. This is default output format if not specified other
						by client in labelResponseType.
						Depending on setting in customer profile all labels or just the export documents.
					</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="exportLabelData" type="xs:base64Binary">
          <xs:annotation>
            <xs:documentation>
						Label as base64 encoded pdf data,
						depending on setting in customer profile all labels or just the export documents.
					</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:choice>
      <xs:choice minOccurs="0" maxOccurs="1">
        <xs:element minOccurs="0" name="codLabelUrl" type="xs:string">
          <xs:annotation>
            <xs:documentation>If label output format was requested as 'URL' via
						LabelResponseType, this element will be returned. It contains the URL to
						access the PDF label. This is default output format if not specified other
						by client in labelResponseType.
						Depending on setting in customer profile all labels or just the cod related documents.
					</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="codLabelData" type="xs:base64Binary">
          <xs:annotation>
            <xs:documentation>
						Label as base64 encoded pdf data,
						depending on setting in customer profile all labels or just the cod related documents.
					</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ExportDocData">
    <xs:annotation>
      <xs:documentation>The status of the getLabel operation and the url for requesting the label
				(if available)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element ref="cis:shipmentNumber">
        <xs:annotation>
          <xs:documentation>ShipmentNumber</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Status" type="gv:Statusinformation">
        <xs:annotation>
          <xs:documentation>Status of the request (value of zero means, the request was
						processed without error; value greater than zero indicates that an error
						occurred).</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:choice>
        <xs:element minOccurs="0" name="exportDocData" type="xs:base64Binary">
          <xs:annotation>
            <xs:documentation>Export doc as base64 encoded pdf data</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="exportDocURL" type="xs:string">
          <xs:annotation>
            <xs:documentation>URL for downloading the Export doc as pdf</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ManifestState">
    <xs:annotation>
      <xs:documentation>The status of a doManifest operation. </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element ref="cis:shipmentNumber">
        <xs:annotation>
          <xs:documentation>ShipmentNumber</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Status" type="gv:Statusinformation">
        <xs:annotation>
          <xs:documentation>Status of the request (value of zero means, the request was
						processed without error; value greater than zero indicates that an error
						occurred).</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DeletionState">
    <xs:annotation>
      <xs:documentation>The status of a deleteShipment operation. </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element ref="cis:shipmentNumber">
        <xs:annotation>
          <xs:documentation>For successful and unsuccessful operations, the requested
						ShipmentNumber to be deleted is returned. This is no matter if the operation
						could be performed or not.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Status" type="gv:Statusinformation">
        <xs:annotation>
          <xs:documentation>Success status of processing the deletion of particular
						shipment.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="BookPickupRequest">
    <xs:annotation>
      <xs:documentation>The data for a pickup order.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="gv:Version">
          <xs:annotation>
            <xs:documentation>The version of the webservice implementation for which the
							requesting client is developed.</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="BookingInformation" type="gv:PickupBookingInformationType">
          <xs:annotation>
            <xs:documentation>Contains information in further leaf elements about product,
							DHL account, pickup date and time, pickup location, amount of pieces,
							pallets, and shipments, moreover weight and volume weight, size.
						</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="PickupAddress" type="gv:PickupAddressType">
          <xs:annotation>
            <xs:documentation>The pickup address.</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="ContactOrderer" type="gv:PickupOrdererType">
          <xs:annotation>
            <xs:documentation>The address and contact information of the
							orderer.</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="BookPickupResponse">
    <xs:annotation>
      <xs:documentation>The data for a pickup order.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="gv:Version">
          <xs:annotation>
            <xs:documentation>The version of the webservice implementation.
						</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="Status" type="gv:Statusinformation">
          <xs:annotation>
            <xs:documentation>Success status after processing the request.</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="ConfirmationNumber" type="xs:string">
          <xs:annotation>
            <xs:documentation>The confirmation number of the successfully created pickup
							order. It can later be used for cancelling a pickup order. Confirmation
							number is not available for each pickup type.</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" name="ShipmentNumber" type="xs:string">
          <xs:annotation>
            <xs:documentation>If available, a shipment number is returned. </xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="PickupDetailsType">
    <xs:annotation>
      <xs:documentation>The details of a pickup order.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="PickupDate">
        <xs:annotation>
          <xs:documentation>Pickup date in format yyyy-mm-dd. Mandatory if pickup is booked
						along with shipment order.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="10" />
            <xs:maxLength value="10" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="ReadyByTime">
        <xs:annotation>
          <xs:documentation>Earliest time for pickup. Format is hh:mm.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="5" />
            <xs:maxLength value="5" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="ClosingTime">
        <xs:annotation>
          <xs:documentation>Lates time for pickup. Format is hh:mm.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="5" />
            <xs:maxLength value="5" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="Remark" type="xs:string">
        <xs:annotation>
          <xs:documentation>Remarks to be considered when pickup is done.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PickupLocation" type="xs:string">
        <xs:annotation>
          <xs:documentation>Area to further detail pickup location beyond address.
					</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PickupAddressType">
    <xs:annotation>
      <xs:documentation><![CDATA[
The pickup address. In the PickupType the following data fields are processed/mandatory/optional:
----------------------------------------------------------------------------------------------
Company Name 1   (mandatory): cis:NameType->Company->name1
Contact Name     (mandatory): cis:CommunicationType->contactPerson
Street Name      (mandatory): cis:NativeAddressType->streetName
Street Number    (mandatory): cis:NativeAddressType->streetNumber
Add. Address 	 (optional) : cis:NativeAddressType->careOfName
Postcode         (mandatory): cis:NativeAddressType->zip
City Name		 (mandatory): cis:NativeAddressType->city
ISO Country Code (mandatory): cis:NativeAddressType->Origin->CountryType->countryISOType 
Phone Number     (mandatory): cis:CommunicationType->phone
Email Address    (mandatory): cis:CommunicationType->email
			]]></xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Company" type="cis:NameType">
        <xs:annotation>
          <xs:documentation>Determines whether pickup address is one of the following
						types.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Address" type="cis:NativeAddressType">
        <xs:annotation>
          <xs:documentation>Data fields for pickup address.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Communication" type="cis:CommunicationType">
        <xs:annotation>
          <xs:documentation>Info about communication. </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PickupOrdererType">
    <xs:annotation>
      <xs:documentation><![CDATA[
Information about the pickup orderer. In the PickupOrdererType the following data fields are processed/mandatory/optional:
----------------------------------------------------------------------------------------------
Salutation		 (optional) : cis:NameType->Person->salutation
Company Name 1   (mandatory): cis:NameType->Company->name1
Company Name 2   (optional) : cis:NameType->Company->name2
Contact Name     (mandatory): cis:CommunicationType->contactPerson
Street Name      (mandatory): cis:NativeAddressType->streetName
Street Number    (mandatory): cis:NativeAddressType->streetNumber
Add. Address     (optional) : cis:NativeAddressType->careOfName
Postcode         (mandatory): cis:NativeAddressType->zip
City Name		 (mandatory): cis:NativeAddressType->city
ISO Country Code (mandatory): cis:NativeAddressType->Origin->CountryType->countryISOType 
Phone Number     (mandatory): cis:CommunicationType->phone
Email Address    (mandatory): cis:CommunicationType->email		
				]]></xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Company" type="cis:NameType">
        <xs:annotation>
          <xs:documentation>Determines whether orderer contact address is of the following
						type.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="Name3" type="xs:string">
        <xs:annotation>
          <xs:documentation>Optional name appendix.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Address" type="cis:NativeAddressType">
        <xs:annotation>
          <xs:documentation>Data fields for orderer's address.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Communication" type="cis:CommunicationType">
        <xs:annotation>
          <xs:documentation>Info about communication. </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PickupBookingInformationType">
    <xs:annotation>
      <xs:documentation>The data of the pickup order.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Account">
        <xs:annotation>
          <xs:documentation>Depending on whether a DD pickup or TD pickup is invoked, this
						field contains either the 10-digit EKP number (DD pickups) or the 9-digit
						accountNumberExpress (TD pickups).</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:maxLength value="14" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="PickupDate">
        <xs:annotation>
          <xs:documentation>Pickup date in format yyyy-mm-dd.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="10" />
            <xs:maxLength value="10" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="ReadyByTime">
        <xs:annotation>
          <xs:documentation>Earliest time for pickup. Format is hh:mm.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="5" />
            <xs:maxLength value="5" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="ClosingTime">
        <xs:annotation>
          <xs:documentation>Lates time for pickup. Format is hh:mm.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="5" />
            <xs:maxLength value="5" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="Remark" type="xs:string">
        <xs:annotation>
          <xs:documentation>Remarks to be considered when pickup is done. Mandatory if 'TDI'
						is selected.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="PickupLocation" type="xs:string">
        <xs:annotation>
          <xs:documentation>Area to further detail pickup location beyond address. Mandatory
						for TDN and TDI, optional for DDN and DDI.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="AmountOfPieces">
        <xs:annotation>
          <xs:documentation>Number of pieces to be picked up.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:integer">
            <xs:minInclusive value="0" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="AmountOfPallets">
        <xs:annotation>
          <xs:documentation>Number of pallets to be picked up.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:integer">
            <xs:minInclusive value="0" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="WeightInKG">
        <xs:annotation>
          <xs:documentation>The weight of all shipment's pieces in kg. Field length must be
						less than or equal to 22. </xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:decimal">
            <xs:fractionDigits value="2" />
            <xs:minInclusive value="0.0" />
            <xs:maxInclusive value="9999999.99" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="CountOfShipments">
        <xs:annotation>
          <xs:documentation>Number of shipments to be picked up.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:integer">
            <xs:minInclusive value="0" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="TotalVolumeWeight">
        <xs:annotation>
          <xs:documentation>The total volumetric weight of all pieces in kg. Calculated by
						piece = length x width x height in centimetres / 5000. Field length must be
						less than or equal to 22. </xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:decimal">
            <xs:fractionDigits value="2" />
            <xs:minInclusive value="0.0" />
            <xs:maxInclusive value="9999999.99" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="MaxLengthInCM">
        <xs:annotation>
          <xs:documentation>The maximum length in cm.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:decimal">
            <xs:fractionDigits value="2" />
            <xs:minInclusive value="0.0" />
            <xs:maxInclusive value="9999999.99" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="MaxWidthInCM">
        <xs:annotation>
          <xs:documentation>The maximum width in cm.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:decimal">
            <xs:fractionDigits value="2" />
            <xs:minInclusive value="0.0" />
            <xs:maxInclusive value="9999999.99" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="MaxHeightInCM">
        <xs:annotation>
          <xs:documentation>The maximum height in cm.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:decimal">
            <xs:fractionDigits value="2" />
            <xs:minInclusive value="0.0" />
            <xs:maxInclusive value="9999999.99" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="CancelPickupRequest">
    <xs:annotation>
      <xs:documentation>The data for cancelling a pickup order. </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="gv:Version">
          <xs:annotation>
            <xs:documentation>The version of the webservice implementation for which the
							requesting client is developed.</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="BookingConfirmationNumber" type="xs:string">
          <xs:annotation>
            <xs:documentation>The confirmation number of the pickup order which should be
							cancelled. Use value from pickup response attribute 'ConfirmationNumber'
							to cancel respective pickup order. Note: only one pickup can be deleted
							at a time.</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="CancelPickupResponse">
    <xs:annotation>
      <xs:documentation>The status of the cancel pickup operation. </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="gv:Version">
          <xs:annotation>
            <xs:documentation>The version of the webservice implementation.
						</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="Status" type="gv:Statusinformation">
          <xs:annotation>
            <xs:documentation>Success status after processing the request.</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="IdentityData">
    <xs:annotation>
      <xs:documentation>Identity data (used e.g. for ident services)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:choice>
        <xs:element name="DrivingLicense">
          <xs:annotation>
            <xs:documentation>If driving license shall be used for verifying
							identity.</xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence>
              <xs:element name="LicenseNumber" type="xs:string">
                <xs:annotation>
                  <xs:documentation>ID number of the driving license. Mandatory if
										DrivingLicense is chosen as identity
										instrument.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Authority" type="xs:string">
                <xs:annotation>
                  <xs:documentation>Name of certifying authority of the driving
										license. Mandatory if DrivingLicense is chosen as identity
										instrument.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="IdentityCard">
          <xs:annotation>
            <xs:documentation>If identity card shall be used for verifying
							identity.</xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence>
              <xs:element name="CardNumber" type="xs:string">
                <xs:annotation>
                  <xs:documentation>Number of the identity card. Mandatory if
										IdentityCard is chosen as identity instrument. Field length
										must be less than or equal to 20.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="CardAuthority" type="xs:string">
                <xs:annotation>
                  <xs:documentation>Name of certifying card authority. Mandatory if
										IdentityCard is chosen as identity instrument. Field length
										must be less than or equal to 30.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="BankCard">
          <xs:annotation>
            <xs:documentation>If a bank card shall be used for verifying
							identity.</xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence>
              <xs:element name="CardType" type="xs:string">
                <xs:annotation>
                  <xs:documentation>Type of bank card. Mandatory if BankCard is
										chosen as identity instrument.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="CardNumber" type="xs:string">
                <xs:annotation>
                  <xs:documentation>Number of bank card. Mandatory if BankCard is
										chosen as identity instrument.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="BankName" type="xs:string">
                <xs:annotation>
                  <xs:documentation>Name of bank. Mandatory if BankCard is chosen as
										identity instrument.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="BankCode" type="xs:string">
                <xs:annotation>
                  <xs:documentation>Bank code. Mandatory if BankCard is chosen as
										identity instrument. </xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PackstationType">
    <xs:annotation>
      <xs:documentation>Type of Packstation (Receiver is in Germany)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:annotation>
        <xs:documentation>includes</xs:documentation>
      </xs:annotation>
      <xs:element name="PackstationNumber" type="xs:string">
        <xs:annotation>
          <xs:documentation>Number of the packstation</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PostNumber" type="xs:string">
        <xs:annotation>
          <xs:documentation>Post Nummer of the receiver</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Zip">
        <xs:annotation>
          <xs:documentation>Postcode</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="5" />
            <xs:maxLength value="5" />
            <xs:pattern value="[0-9]{5}" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="City">
        <xs:annotation>
          <xs:documentation>City name.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:maxLength value="50" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PostfilialeType">
    <xs:annotation>
      <xs:documentation>Type of Postfiliale (Receiver is in Germany)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:annotation>
        <xs:documentation>includes</xs:documentation>
      </xs:annotation>
      <xs:element name="PostfilialNumber" type="xs:string">
        <xs:annotation>
          <xs:documentation>Number of the postfiliale</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PostNumber" type="xs:string">
        <xs:annotation>
          <xs:documentation>Post Nummer of the receiver</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Zip">
        <xs:annotation>
          <xs:documentation>Postcode</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="5" />
            <xs:maxLength value="5" />
            <xs:pattern value="[0-9]{5}" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="City">
        <xs:annotation>
          <xs:documentation>City name.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:maxLength value="50" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ParcelShopType">
    <xs:annotation>
      <xs:documentation>Type of ParcelShop (Receiver is in Europe)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:annotation>
        <xs:documentation>includes</xs:documentation>
      </xs:annotation>
      <xs:element name="ParcelShopNumber" type="xs:string">
        <xs:annotation>
          <xs:documentation>Number of the ParcelShop</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="streetName">
        <xs:annotation>
          <xs:documentation>Name of street of the ParcelShop</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:maxLength value="35" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="streetNumber">
        <xs:annotation>
          <xs:documentation>House number of the ParcelShop</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:maxLength value="5" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="Zip">
        <xs:annotation>
          <xs:documentation>Postcode</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="5" />
            <xs:maxLength value="5" />
            <xs:pattern value="[0-9]{5}" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="City">
        <xs:annotation>
          <xs:documentation>City name.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:maxLength value="50" />
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ReadShipmentOrderResponse">
    <xs:annotation>
      <xs:documentation>The status of the operation and the shipment identifier (if
				available).</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="gv:Version">
          <xs:annotation>
            <xs:documentation>The version of the webservice implementation.
						</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="status" type="gv:Statusinformation">
          <xs:annotation>
            <xs:documentation>Success status after processing the overall
							request.</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element minOccurs="0" maxOccurs="30" name="CreationState" type="gv:CreationState">
          <xs:annotation>
            <xs:documentation>The operation's success status for every single ShipmentOrder
							will be returned by one CreationState element. It is identifiable via
							SequenceNumber.</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="Version">
    <xs:annotation>
      <xs:documentation>The version of the webservice implementation for which the
				requesting client is developed.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:annotation>
          <xs:documentation>includes</xs:documentation>
        </xs:annotation>
        <xs:element name="majorRelease">
          <xs:annotation>
            <xs:documentation>The number of the major release. E.g. the '2' in version "2.1.".</xs:documentation>
          </xs:annotation>
          <xs:simpleType>
            <xs:restriction base="xs:string">
              <xs:maxLength value="2" />
            </xs:restriction>
          </xs:simpleType>
        </xs:element>
        <xs:element name="minorRelease">
          <xs:annotation>
            <xs:documentation>The number of the minor release. E.g. the '1' in version "2.1.".</xs:documentation>
          </xs:annotation>
          <xs:simpleType>
            <xs:restriction base="xs:string">
              <xs:maxLength value="2" />
            </xs:restriction>
          </xs:simpleType>
        </xs:element>
        <xs:element minOccurs="0" name="build">
          <xs:annotation>
            <xs:documentation>Optional build id to be addressed.</xs:documentation>
          </xs:annotation>
          <xs:simpleType>
            <xs:restriction base="xs:string">
              <xs:maxLength value="5" />
            </xs:restriction>
          </xs:simpleType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>